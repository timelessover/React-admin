{"version":3,"sources":["components/CustomBreadcrumb/index.js","utils/typing.js","components/TypingCard/index.js","routes/Entry/FormDemo/FormDemo1.js"],"names":["CustomBreadcrumb","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","antd_es_breadcrumb__WEBPACK_IMPORTED_MODULE_1__","style","marginBottom","Item","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to","arr","map","item","key","title","Typing","opts","Object","classCallCheck","this","source","output","delay","chain","parent","dom","val","done","convert","children","Array","from","childNodes","i","length","node","nodeType","concat","nodeValue","split","push","callback","setTimeout","appendChild","document","createTextNode","ele","_this","current","shift","print","play","cloneNode","init","TypingCard","start","react_default","card","hoverable","bordered","className","minHeight","height","id","display","ref","el","dangerouslySetInnerHTML","__html","React","Component","defaultProps","FormItem","antd_es_form__WEBPACK_IMPORTED_MODULE_30__","Option","antd_es_select__WEBPACK_IMPORTED_MODULE_28__","options","label","value","FormDemo1","create","state","text","disabled","timer","countdown","e","time","setState","setInterval","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","antd_es_message__WEBPACK_IMPORTED_MODULE_21__","warning","success","clearInterval","_this2","_this$props$form","getFieldDecorator","getFieldValue","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","react__WEBPACK_IMPORTED_MODULE_31___default","width","_components_CustomBreadcrumb_index__WEBPACK_IMPORTED_MODULE_32__","_components_TypingCard__WEBPACK_IMPORTED_MODULE_33__","antd_es_card__WEBPACK_IMPORTED_MODULE_3__","layout","margin","onSubmit","assign","rules","type","message","required","antd_es_input__WEBPACK_IMPORTED_MODULE_19__","min","max","whitespace","validator","rule","antd_es_tooltip__WEBPACK_IMPORTED_MODULE_15__","antd_es_icon__WEBPACK_IMPORTED_MODULE_17__","antd_es_cascader__WEBPACK_IMPORTED_MODULE_13__","expandTrigger","placeholder","len","pattern","addonBefore","antd_es_row__WEBPACK_IMPORTED_MODULE_7__","gutter","antd_es_col__WEBPACK_IMPORTED_MODULE_11__","antd_es_button__WEBPACK_IMPORTED_MODULE_9__","onClick","valuePropName","antd_es_checkbox__WEBPACK_IMPORTED_MODULE_5__","textAlign","htmlType","antd_es_back_top__WEBPACK_IMPORTED_MODULE_1__","visibilityHeight","right"],"mappings":"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","file":"static/js/29.1a1ab8b3.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Breadcrumb} from 'antd'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CustomBreadcrumb = (props)=>(\r\n  <Breadcrumb style={{marginBottom:16}}>\r\n    <Breadcrumb.Item><Link to='/home'>首页</Link></Breadcrumb.Item>\r\n    {props.arr && props.arr.map(item=>{\r\n      if ((typeof item) === 'object'){\r\n        return <Breadcrumb.Item key={item.title}><Link to={item.to}>{item.title}</Link></Breadcrumb.Item>\r\n      } else {\r\n        return <Breadcrumb.Item key={item}>{item}</Breadcrumb.Item>\r\n      }\r\n    })}\r\n  </Breadcrumb>\r\n)\r\nexport default CustomBreadcrumb","class Typing {\r\n  constructor(opts) {\r\n    this.opts = opts || {};\r\n    this.source = opts.source;\r\n    this.output = opts.output;\r\n    this.delay = opts.delay || 120;\r\n    this.chain = {\r\n      parent: null,\r\n      dom: this.output,\r\n      val: []\r\n    };\r\n    if (!(typeof this.opts.done === 'function')) this.opts.done = function () {\r\n    };\r\n  }\r\n\r\n  init() {\r\n    //初始化函数\r\n    this.chain.val = this.convert(this.source, this.chain.val);\r\n  }\r\n\r\n  convert(dom, arr) {\r\n    //将dom节点的子节点转换成数组，\r\n    let children = Array.from(dom.childNodes)\r\n    for (let i = 0; i < children.length; i++) {\r\n      let node = children[i]\r\n      if (node.nodeType === 3) {\r\n        arr = arr.concat(node.nodeValue.split(''))   //将字符串转换成字符串数组，后面打印时才会一个一个的打印\r\n      } else if (node.nodeType === 1) {\r\n        let val = []\r\n        val = this.convert(node, val)\r\n        arr.push({\r\n          'dom': node,\r\n          'val': val\r\n        })\r\n      }\r\n    }\r\n    return arr\r\n  }\r\n\r\n  print(dom, val, callback) {\r\n    setTimeout(function () {\r\n      dom.appendChild(document.createTextNode(val));\r\n      callback();\r\n    }, this.delay);\r\n  }\r\n\r\n  play(ele) {\r\n    //当打印最后一个字符时，动画完毕，执行done\r\n    if (!ele.val.length) {\r\n      if (ele.parent) this.play(ele.parent);\r\n      else this.opts.done();\r\n      return;\r\n    }\r\n    let current = ele.val.shift()  //获取第一个元素，同时删除数组中的第一个元素\r\n    if (typeof current === 'string') {\r\n      this.print(ele.dom, current, () => {\r\n        this.play(ele); //继续打印下一个字符\r\n      })\r\n    } else {\r\n      let dom = current.dom.cloneNode() //克隆节点，不克隆节点的子节点，所以不用加参数true\r\n      ele.dom.appendChild(dom)\r\n      this.play({\r\n        parent: ele,\r\n        dom,\r\n        val: current.val\r\n      })\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this.init();\r\n    this.play(this.chain);\r\n  }\r\n}\r\n\r\nexport default Typing","import React from 'react'\r\nimport {Card} from 'antd'\r\nimport Typing from '../../utils/typing'\r\n\r\nclass TypingCard extends React.Component {\r\n  static defaultProps = {\r\n    title: '何时使用',\r\n    source:'',\r\n    height:136\r\n  }\r\n  componentDidMount(){\r\n    const typing = new Typing({\r\n      source:this.source,\r\n      output:this.output,\r\n      delay:30\r\n    })\r\n    typing.start()\r\n  }\r\n  render() {\r\n    return (\r\n      <Card hoverable bordered={false} className='card-item' title={this.props.title} style={{minHeight:this.props.height}} id={this.props.id}>\r\n        <div style={{display:'none'}} ref={el => this.source = el} dangerouslySetInnerHTML={{__html:this.props.source}}/>\r\n        <div ref={el => this.output = el}/>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TypingCard","import React from 'react'\nimport {Card, Cascader, Tooltip, Icon, Form, Checkbox, Select, Input, Button, Col, Row, message, BackTop} from 'antd'\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb/index'\nimport TypingCard from '../../../components/TypingCard'\n\nconst FormItem = Form.Item\nconst Option = Select.Option\n\nconst options = [\n  {\n    label: '湖北',\n    value: 'hubei',\n    children: [\n      {\n        label: '武汉',\n        value: 'wuhang',\n        children: [\n          {\n            label: '蔡甸区',\n            value: 'caidian'\n          },\n          {\n            label: '江夏',\n            value: 'jiangxia'\n          }\n        ]\n      },\n      {\n        label: '宜昌',\n        value: 'yichang',\n        children: [\n          {\n            label: '伍家岗',\n            value: 'wujiagang'\n          },\n          {\n            label: '夷陵区',\n            value: 'yilingqu'\n          },\n          {\n            label: '江南',\n            value: 'jiangnan'\n          },\n          {\n            label: '开发区',\n            value: 'kaifaqu'\n          },\n          {\n            label: 'CBD',\n            value: 'CBD'\n          }\n        ]\n      }\n    ]\n  }\n]\n\n@Form.create()\nclass FormDemo1 extends React.Component {\n  state = {\n    text: '获取验证码',\n    disabled: false,\n\n  }\n  timer = 0\n  countdown = (e) => {\n    let time = 60\n    this.setState({\n      text: --time + 's',\n      disabled: true\n    })\n    this.timer = setInterval(() => {\n      if (time > 0) {\n        this.setState({\n          text: --time + 's',\n          disabled: true\n        })\n      } else {\n        this.setState({\n          text: '获取验证码',\n          disabled: false\n        })\n      }\n    }, 1000)\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (err) {\n        message.warning('请先填写正确的表单')\n      } else {\n        message.success('提交成功')\n        // console.log(values)\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer)\n  }\n\n  render() {\n    const {getFieldDecorator, getFieldValue} = this.props.form\n    const formItemLayout = {\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 4},\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 12},\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 12,\n          offset: 4,\n        },\n      },\n    }\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: 86,\n    })(\n      <Select style={{width: 70}}>\n        <Option value={86}>+86</Option>\n        <Option value={87}>+87</Option>\n      </Select>\n    );\n    const cardContent = '表单页用于向用户收集或验证信息，基础表单常见于数据项较少的表单场景'\n    return (\n      <div>\n        <CustomBreadcrumb arr={['输入', '表单', '基础表单']}/>\n        <TypingCard source={cardContent}/>\n        <Card bordered={false} title='基础表单'>\n          <Form layout='horizontal' style={{width: '70%', margin: '0 auto'}} onSubmit={this.handleSubmit}>\n            <FormItem label='邮箱' {...formItemLayout}>\n              {\n                getFieldDecorator('email', {\n                  rules: [\n                    {\n                      type: 'email',\n                      message: '请输入正确的邮箱地址'\n                    },\n                    {\n                      required: true,\n                      message: '请填写邮箱地址'\n                    }\n                  ]\n                })(\n                  <Input/>\n                )\n              }\n            </FormItem>\n            <FormItem label='密码' {...formItemLayout}>\n              {\n                getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '请输入密码'\n                    },\n                    {\n                      min: 6,\n                      message: '密码至少为6个字符'\n                    },\n                    {\n                      max: 16,\n                      message: '密码最多为16个字符'\n                    },\n                    {\n                      whitespace: true,\n                      message: '密码中不能有空格'\n                    }\n                  ]\n                })(\n                  <Input type='password'/>\n                )\n              }\n            </FormItem>\n            <FormItem label='确认密码' {...formItemLayout} required>\n              {\n                getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      validator: (rule, value, callback) => {\n                        const {getFieldValue} = this.props.form\n                        if (!getFieldValue('password')) {\n                          callback('请先输入上面的密码！')\n                        }\n                        if (value && value !== getFieldValue('password')) {\n                          callback('两次输入不一致！')\n                        }\n                        callback()\n                      }\n                    }\n                  ]\n                })(\n                  <Input type='password'/>\n                )\n              }\n            </FormItem>\n            <FormItem {...formItemLayout} label={(\n              <span>\n                昵称&nbsp;\n                <Tooltip title='请输入您的昵称'>\n                  <Icon type='question-circle-o'/>\n                </Tooltip>\n              </span>\n            )}>\n              {\n                getFieldDecorator('nickname', {\n                  rules: []\n                })(\n                  <Input/>\n                )\n              }\n            </FormItem>\n            <FormItem label='居住地' {...formItemLayout} required>\n              {\n                getFieldDecorator('residence', {\n                  rules: [\n                    {\n                      type: 'array',\n                      required: true,\n                      message: '请选择居住地'\n                    }\n                  ]\n                })(\n                  <Cascader options={options} expandTrigger=\"hover\" placeholder=''/>\n                )\n              }\n            </FormItem>\n            <FormItem label='电话' {...formItemLayout}>\n              {\n                getFieldDecorator('phone', {\n                  rules: [\n                    {\n                      len: 11,\n                      pattern: /^[1][3,4,5,7,8][0-9]{9}$/,\n                      required: true,\n                      message: '请输入正确的11位手机号码'\n                    }\n                  ]\n                })(\n                  <Input addonBefore={prefixSelector}/>\n                )\n              }\n            </FormItem>\n            <FormItem label='个人站点' {...formItemLayout}>\n              {\n                getFieldDecorator('website', {\n                  rules: [\n                    {\n                      pattern: /^([hH][tT]{2}[pP]:\\/\\/|[hH][tT]{2}[pP][sS]:\\/\\/)(([A-Za-z0-9-~]+)\\.)+([A-Za-z0-9-~/])+$/,\n                      message: '请输入正确的站点地址'\n                    }\n                  ]\n                })(\n                  <Input/>\n                )\n              }\n            </FormItem>\n            <FormItem{...formItemLayout} label=\"验证码\">\n              <Row gutter={8}>\n                <Col span={12}>\n                  {getFieldDecorator('captcha', {\n                    rules: [{required: true, message: '请输入验证码！'}],\n                  })(\n                    <Input/>\n                  )}\n                </Col>\n                <Col span={12}>\n                  <Button disabled={this.state.disabled} onClick={(e) => this.countdown(e)}>{this.state.text}</Button>\n                </Col>\n              </Row>\n            </FormItem>\n            <FormItem {...tailFormItemLayout}>\n              {getFieldDecorator('agreement', {\n                valuePropName: 'checked',\n              })(\n                <Checkbox>我已阅读并同意<a>协议</a></Checkbox>\n              )}\n            </FormItem>\n            <FormItem style={{textAlign: 'center'}} {...tailFormItemLayout}>\n              <Button type=\"primary\" htmlType=\"submit\" disabled={!getFieldValue('agreement')}>提交</Button>\n            </FormItem>\n          </Form>\n        </Card>\n        <BackTop visibilityHeight={200} style={{right: 50}}/>\n      </div>\n    )\n  }\n}\n\nexport default FormDemo1"],"sourceRoot":""}