{"version":3,"sources":["components/CustomBreadcrumb/index.js","utils/typing.js","components/TypingCard/index.js","routes/Entry/UploadDemo/index.js"],"names":["CustomBreadcrumb","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","antd_es_breadcrumb__WEBPACK_IMPORTED_MODULE_1__","style","marginBottom","Item","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to","arr","map","item","key","title","Typing","opts","Object","classCallCheck","this","source","output","delay","chain","parent","dom","val","done","convert","children","Array","from","childNodes","i","length","node","nodeType","concat","nodeValue","split","push","callback","setTimeout","appendChild","document","createTextNode","ele","_this","current","shift","print","play","cloneNode","init","TypingCard","start","react_default","card","hoverable","bordered","className","minHeight","height","id","display","ref","el","dangerouslySetInnerHTML","__html","React","Component","defaultProps","Dragger","antd_es_upload__WEBPACK_IMPORTED_MODULE_23__","name","action","headers","authorization","onChange","info","file","status","antd_es_message__WEBPACK_IMPORTED_MODULE_21__","success","error","defaultFileList","uid","reponse","url","props2","multiple","console","log","fileList","UploadDemo","state","loading","previewVisible","previewImage","handleChange","img","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","setState","message","handlePreview","thumbUrl","isJPG","type","isLt2M","size","_this2","uploadButton","react__WEBPACK_IMPORTED_MODULE_24___default","antd_es_icon__WEBPACK_IMPORTED_MODULE_14__","_components_CustomBreadcrumb__WEBPACK_IMPORTED_MODULE_25__","_components_TypingCard__WEBPACK_IMPORTED_MODULE_26__","antd_es_row__WEBPACK_IMPORTED_MODULE_3__","gutter","antd_es_col__WEBPACK_IMPORTED_MODULE_5__","span","antd_es_card__WEBPACK_IMPORTED_MODULE_10__","antd_es_button__WEBPACK_IMPORTED_MODULE_12__","C_Users_Administrator_Desktop_react_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_8__","styles","colItem","listType","onPreview","_ref","antd_es_modal__WEBPACK_IMPORTED_MODULE_7__","visible","onCancel","alt","width","src","align","showUploadList","beforeUpload","antd_es_back_top__WEBPACK_IMPORTED_MODULE_1__","visibilityHeight","right","borderRadius","margin"],"mappings":"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","file":"static/js/30.07a35e9c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Breadcrumb} from 'antd'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CustomBreadcrumb = (props)=>(\r\n  <Breadcrumb style={{marginBottom:16}}>\r\n    <Breadcrumb.Item><Link to='/home'>首页</Link></Breadcrumb.Item>\r\n    {props.arr && props.arr.map(item=>{\r\n      if ((typeof item) === 'object'){\r\n        return <Breadcrumb.Item key={item.title}><Link to={item.to}>{item.title}</Link></Breadcrumb.Item>\r\n      } else {\r\n        return <Breadcrumb.Item key={item}>{item}</Breadcrumb.Item>\r\n      }\r\n    })}\r\n  </Breadcrumb>\r\n)\r\nexport default CustomBreadcrumb","class Typing {\r\n  constructor(opts) {\r\n    this.opts = opts || {};\r\n    this.source = opts.source;\r\n    this.output = opts.output;\r\n    this.delay = opts.delay || 120;\r\n    this.chain = {\r\n      parent: null,\r\n      dom: this.output,\r\n      val: []\r\n    };\r\n    if (!(typeof this.opts.done === 'function')) this.opts.done = function () {\r\n    };\r\n  }\r\n\r\n  init() {\r\n    //初始化函数\r\n    this.chain.val = this.convert(this.source, this.chain.val);\r\n  }\r\n\r\n  convert(dom, arr) {\r\n    //将dom节点的子节点转换成数组，\r\n    let children = Array.from(dom.childNodes)\r\n    for (let i = 0; i < children.length; i++) {\r\n      let node = children[i]\r\n      if (node.nodeType === 3) {\r\n        arr = arr.concat(node.nodeValue.split(''))   //将字符串转换成字符串数组，后面打印时才会一个一个的打印\r\n      } else if (node.nodeType === 1) {\r\n        let val = []\r\n        val = this.convert(node, val)\r\n        arr.push({\r\n          'dom': node,\r\n          'val': val\r\n        })\r\n      }\r\n    }\r\n    return arr\r\n  }\r\n\r\n  print(dom, val, callback) {\r\n    setTimeout(function () {\r\n      dom.appendChild(document.createTextNode(val));\r\n      callback();\r\n    }, this.delay);\r\n  }\r\n\r\n  play(ele) {\r\n    //当打印最后一个字符时，动画完毕，执行done\r\n    if (!ele.val.length) {\r\n      if (ele.parent) this.play(ele.parent);\r\n      else this.opts.done();\r\n      return;\r\n    }\r\n    let current = ele.val.shift()  //获取第一个元素，同时删除数组中的第一个元素\r\n    if (typeof current === 'string') {\r\n      this.print(ele.dom, current, () => {\r\n        this.play(ele); //继续打印下一个字符\r\n      })\r\n    } else {\r\n      let dom = current.dom.cloneNode() //克隆节点，不克隆节点的子节点，所以不用加参数true\r\n      ele.dom.appendChild(dom)\r\n      this.play({\r\n        parent: ele,\r\n        dom,\r\n        val: current.val\r\n      })\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this.init();\r\n    this.play(this.chain);\r\n  }\r\n}\r\n\r\nexport default Typing","import React from 'react'\r\nimport {Card} from 'antd'\r\nimport Typing from '../../utils/typing'\r\n\r\nclass TypingCard extends React.Component {\r\n  static defaultProps = {\r\n    title: '何时使用',\r\n    source:'',\r\n    height:136\r\n  }\r\n  componentDidMount(){\r\n    const typing = new Typing({\r\n      source:this.source,\r\n      output:this.output,\r\n      delay:30\r\n    })\r\n    typing.start()\r\n  }\r\n  render() {\r\n    return (\r\n      <Card hoverable bordered={false} className='card-item' title={this.props.title} style={{minHeight:this.props.height}} id={this.props.id}>\r\n        <div style={{display:'none'}} ref={el => this.source = el} dangerouslySetInnerHTML={{__html:this.props.source}}/>\r\n        <div ref={el => this.output = el}/>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TypingCard","import React from 'react'\nimport {Card, Col, Row, Icon, Upload, message, Button, Modal,BackTop} from 'antd'\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb'\nimport TypingCard from '../../../components/TypingCard'\n\nconst Dragger = Upload.Dragger;\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nconst props = {\n  name: 'file',\n  action: '//jsonplaceholder.typicode.com/posts/',\n  headers: {\n    authorization: 'authorization-text',\n  },\n  onChange(info) {\n    if (info.file.status !== 'uploading') {\n      // console.log(info.file, info.fileList);\n    }\n    if (info.file.status === 'done') {\n      message.success(`${info.file.name} 文件上传成功`);\n    } else if (info.file.status === 'error') {\n      message.error(`${info.file.name} 文件上传失败`);\n    }\n  },\n  defaultFileList: [{\n    uid: 1,\n    name: 'xxx.png',\n    status: 'done',\n    reponse: 'Server Error 500', // custom error message to show\n    url: 'http://www.baidu.com/xxx.png',\n  }, {\n    uid: 2,\n    name: 'yyy.png',\n    status: 'done',\n    url: 'http://www.baidu.com/yyy.png',\n  }, {\n    uid: 3,\n    name: 'zzz.png',\n    status: 'error',\n    reponse: 'Server Error 500', // custom error message to show\n    url: 'http://www.baidu.com/zzz.png',\n  }],\n}\n\nconst props2 = {\n  name: 'file',\n  multiple: true,\n  action: '//jsonplaceholder.typicode.com/posts/',\n  onChange(info) {\n    const status = info.file.status;\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully.`);\n    } else if (status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n}\n\nclass UploadDemo extends React.Component {\n  state = {\n    loading: false,\n    previewVisible: false,\n    previewImage: '',\n    fileList: [{\n      uid: -1,\n      name: 'xxx.png',\n      status: 'done',\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n    }],\n  }\n\n  beforeUpload(file, fileList) {\n    const isJPG = file.type === 'image/jpeg'\n    if (!isJPG) {\n      message.error('只能上传JPG格式的图片');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('图片大小不超过 2MB!');\n    }\n    return isJPG && isLt2M;\n  }\n\n  handleChange = (info) => {\n    if (info.file.status === 'uploading') {\n      this.setState({loading: true});\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, imageUrl => this.setState({\n        imageUrl,\n        loading: false,\n      }))\n    } else if (info.file.status === 'error') {\n      // console.log(info.file)\n      message.error(`${info.file.name} 文件上传失败（${info.file.error.message}）`);\n      this.setState({\n        loading: false\n      })\n    }\n  }\n  handlePreview = (file) => {\n    this.setState({\n      previewImage: file.url || file.thumbUrl,\n      previewVisible: true,\n    });\n  }\n\n  render() {\n    const uploadButton = (\n      <div>\n        <Icon type=\"plus\"/>\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const cardContent = `上传是将信息（网页、文字、图片、视频等）通过网页或者上传工具发布到远程服务器上的过程。\n          <ul class=\"card-ul\">\n            <li>当需要上传一个或一些文件时</li>\n            <li>当需要展现上传的进度时</li>\n            <li>当需要使用拖拽交互时</li>\n          </ul>`\n    return (\n      <div>\n        <CustomBreadcrumb arr={['输入', '上传']}/>\n        <TypingCard source={cardContent} height={234}/>\n        <Row gutter={16}>\n          <Col span={12}>\n            <Card bordered={false} className='card-item' title='基本用法'>\n              <Upload {...props}>\n                <Button><Icon type=\"upload\"/>Upload</Button>\n              </Upload>\n            </Card>\n            <Card bordered={false} style={{...styles.colItem, minHeight: 255}} title='照片墙'>\n              <Upload\n                action=\"//jsonplaceholder.typicode.com/posts/\"\n                listType=\"picture-card\"\n                fileList={this.state.fileList}\n                onPreview={this.handlePreview}\n                onChange={({fileList}) => this.setState({fileList})}\n              >\n                {this.state.fileList.length >= 3 ? null : uploadButton}\n              </Upload>\n              <Modal visible={this.state.previewVisible} onCancel={() => this.setState({previewVisible: false})}>\n                <img alt=\"example\" style={{width: '100%'}} src={this.state.previewImage}/>\n              </Modal>\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card bordered={false} className='card-item' title='用户头像上传'>\n              <Row type='flex' align='middle'>\n                <Col span={8}>\n                  <Upload\n                    name=\"avatar\"\n                    showUploadList={false}\n                    action='/upload'\n                    beforeUpload={this.beforeUpload}\n                    onChange={this.handleChange}\n                    listType=\"picture-card\">\n                    <div>\n                      <Icon type={this.state.loading ? 'loading' : 'plus'}/>\n                      <div className=\"ant-upload-text\">Upload</div>\n                    </div>\n                  </Upload>\n                </Col>\n                <Col span={16}>\n                  点击上传用户头像，并使用 beforeUpload 限制用户上传的图片格式和大小\n                </Col>\n              </Row>\n            </Card>\n            <Card bordered={false} className='card-item' title='拖拽上传'>\n              <Dragger {...props2}>\n                <p className=\"ant-upload-drag-icon\">\n                  <Icon type=\"inbox\"/>\n                </p>\n                <p className=\"ant-upload-text\">点击或拖拽到此处完成上传</p>\n                <p className=\"ant-upload-hint\">支持单个或批量上传。严禁上传公司数据或其他带文件</p>\n              </Dragger>\n            </Card>\n          </Col>\n        </Row>\n        <BackTop visibilityHeight={200} style={{right: 50}}/>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  colItem: {\n    minHeight: 230,\n    borderRadius: 3,\n    margin: '10px 0'\n  }\n}\n\nexport default UploadDemo"],"sourceRoot":""}