{"version":3,"sources":["components/CustomBreadcrumb/index.js","utils/typing.js","components/TypingCard/index.js","routes/Other/ChartDemo/index.js"],"names":["CustomBreadcrumb","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","antd_es_breadcrumb__WEBPACK_IMPORTED_MODULE_1__","style","marginBottom","Item","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to","arr","map","item","key","title","Typing","opts","Object","classCallCheck","this","source","output","delay","chain","parent","dom","val","done","convert","children","Array","from","childNodes","i","length","node","nodeType","concat","nodeValue","split","push","callback","setTimeout","appendChild","document","createTextNode","ele","_this","current","shift","print","play","cloneNode","init","TypingCard","start","react_default","card","hoverable","bordered","className","minHeight","height","id","display","ref","el","dangerouslySetInnerHTML","__html","React","Component","defaultProps","data","year","value","cols","min","range","data2","sales","cols2","tickInterval","dv3","View","count","transform","type","field","dimension","as","cols3","percent","formatter","colorMap","Asia","G2","Global","colors","Americas","Europe","Oceania","cols4","LifeExpectancy","alias","Population","GDP","Country","data4","continent","ChartDemo","react__WEBPACK_IMPORTED_MODULE_13___default","_components_CustomBreadcrumb_index__WEBPACK_IMPORTED_MODULE_14__","_components_TypingCard__WEBPACK_IMPORTED_MODULE_15__","antd_es_row__WEBPACK_IMPORTED_MODULE_3__","gutter","antd_es_col__WEBPACK_IMPORTED_MODULE_5__","span","antd_es_card__WEBPACK_IMPORTED_MODULE_7__","bizcharts__WEBPACK_IMPORTED_MODULE_16__","scale","forceFit","name","crosshairs","position","size","shape","stroke","lineWidth","padding","radius","offsetY","showTitle","itemTpl","color","tooltip","content","point","label","toFixed","reversed","opacity","strokeOpacity","fillOpacity","antd_es_back_top__WEBPACK_IMPORTED_MODULE_1__","visibilityHeight","right"],"mappings":"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","file":"static/js/37.60030f15.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Breadcrumb} from 'antd'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CustomBreadcrumb = (props)=>(\r\n  <Breadcrumb style={{marginBottom:16}}>\r\n    <Breadcrumb.Item><Link to='/home'>首页</Link></Breadcrumb.Item>\r\n    {props.arr && props.arr.map(item=>{\r\n      if ((typeof item) === 'object'){\r\n        return <Breadcrumb.Item key={item.title}><Link to={item.to}>{item.title}</Link></Breadcrumb.Item>\r\n      } else {\r\n        return <Breadcrumb.Item key={item}>{item}</Breadcrumb.Item>\r\n      }\r\n    })}\r\n  </Breadcrumb>\r\n)\r\nexport default CustomBreadcrumb","class Typing {\r\n  constructor(opts) {\r\n    this.opts = opts || {};\r\n    this.source = opts.source;\r\n    this.output = opts.output;\r\n    this.delay = opts.delay || 120;\r\n    this.chain = {\r\n      parent: null,\r\n      dom: this.output,\r\n      val: []\r\n    };\r\n    if (!(typeof this.opts.done === 'function')) this.opts.done = function () {\r\n    };\r\n  }\r\n\r\n  init() {\r\n    //初始化函数\r\n    this.chain.val = this.convert(this.source, this.chain.val);\r\n  }\r\n\r\n  convert(dom, arr) {\r\n    //将dom节点的子节点转换成数组，\r\n    let children = Array.from(dom.childNodes)\r\n    for (let i = 0; i < children.length; i++) {\r\n      let node = children[i]\r\n      if (node.nodeType === 3) {\r\n        arr = arr.concat(node.nodeValue.split(''))   //将字符串转换成字符串数组，后面打印时才会一个一个的打印\r\n      } else if (node.nodeType === 1) {\r\n        let val = []\r\n        val = this.convert(node, val)\r\n        arr.push({\r\n          'dom': node,\r\n          'val': val\r\n        })\r\n      }\r\n    }\r\n    return arr\r\n  }\r\n\r\n  print(dom, val, callback) {\r\n    setTimeout(function () {\r\n      dom.appendChild(document.createTextNode(val));\r\n      callback();\r\n    }, this.delay);\r\n  }\r\n\r\n  play(ele) {\r\n    //当打印最后一个字符时，动画完毕，执行done\r\n    if (!ele.val.length) {\r\n      if (ele.parent) this.play(ele.parent);\r\n      else this.opts.done();\r\n      return;\r\n    }\r\n    let current = ele.val.shift()  //获取第一个元素，同时删除数组中的第一个元素\r\n    if (typeof current === 'string') {\r\n      this.print(ele.dom, current, () => {\r\n        this.play(ele); //继续打印下一个字符\r\n      })\r\n    } else {\r\n      let dom = current.dom.cloneNode() //克隆节点，不克隆节点的子节点，所以不用加参数true\r\n      ele.dom.appendChild(dom)\r\n      this.play({\r\n        parent: ele,\r\n        dom,\r\n        val: current.val\r\n      })\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this.init();\r\n    this.play(this.chain);\r\n  }\r\n}\r\n\r\nexport default Typing","import React from 'react'\r\nimport {Card} from 'antd'\r\nimport Typing from '../../utils/typing'\r\n\r\nclass TypingCard extends React.Component {\r\n  static defaultProps = {\r\n    title: '何时使用',\r\n    source:'',\r\n    height:136\r\n  }\r\n  componentDidMount(){\r\n    const typing = new Typing({\r\n      source:this.source,\r\n      output:this.output,\r\n      delay:30\r\n    })\r\n    typing.start()\r\n  }\r\n  render() {\r\n    return (\r\n      <Card hoverable bordered={false} className='card-item' title={this.props.title} style={{minHeight:this.props.height}} id={this.props.id}>\r\n        <div style={{display:'none'}} ref={el => this.source = el} dangerouslySetInnerHTML={{__html:this.props.source}}/>\r\n        <div ref={el => this.output = el}/>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TypingCard","import React from 'react'\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb/index'\nimport TypingCard from '../../../components/TypingCard'\nimport { Card, Row, Col,BackTop } from 'antd'\nimport { Chart, Axis, Geom, Tooltip, Coord, Label, Legend, G2 } from 'bizcharts'\nimport { View } from '@antv/data-set'\n\nconst data = [\n  {year: '1991', value: 3},\n  {year: '1992', value: 4},\n  {year: '1993', value: 3.5},\n  {year: '1994', value: 5},\n  {year: '1995', value: 4.9},\n  {year: '1996', value: 6},\n  {year: '1997', value: 7},\n  {year: '1998', value: 9},\n  {year: '1999', value: 13}\n]\nconst cols = {\n  'value': {min: 0},\n  'year': {range: [0, 1]}\n}\n\nconst data2 = [\n  {year: '1951 年', sales: 38},\n  {year: '1952 年', sales: 52},\n  {year: '1956 年', sales: 61},\n  {year: '1957 年', sales: 145},\n  {year: '1958 年', sales: 48},\n  {year: '1959 年', sales: 38},\n  {year: '1960 年', sales: 38},\n  {year: '1962 年', sales: 38},\n]\nconst cols2 = {\n  'sales': {tickInterval: 20},\n}\n\nconst data3 = [\n  {item: '事例一', count: 40},\n  {item: '事例二', count: 21},\n  {item: '事例三', count: 17},\n  {item: '事例四', count: 13},\n  {item: '事例五', count: 9}\n]\nconst dv3 = new View()\ndv3.source(data3).transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n})\nconst cols3 = {\n  percent: {\n    formatter: val => {\n      val = (val * 100) + '%'\n      return val\n    }\n  }\n}\n\nconst colorMap = {\n  'Asia': G2.Global.colors[0],\n  'Americas': G2.Global.colors[1],\n  'Europe': G2.Global.colors[2],\n  'Oceania': G2.Global.colors[3]\n}\nconst cols4 = {\n  LifeExpectancy: {\n    alias: '人均寿命（年）'\n  },\n  Population: {\n    type: 'pow',\n    alias: '人口总数'\n  },\n  GDP: {\n    alias: '人均国内生产总值($)'\n  },\n  Country: {\n    alias: '国家/地区'\n  }\n}\nconst data4 = [\n  {\n  'continent': 'Americas',\n  'Country': 'Argentina',\n  'LifeExpectancy': 75.32,\n  'GDP': 12779.37964,\n  'Population': 40301927\n}, {\n  'continent': 'Americas',\n  'Country': 'Brazil',\n  'LifeExpectancy': 72.39,\n  'GDP': 9065.800825,\n  'Population': 190010647\n}, {\n  'continent': 'Americas',\n  'Country': 'Canada',\n  'LifeExpectancy': 80.653,\n  'GDP': 36319.23501,\n  'Population': 33390141\n}, {\n  'continent': 'Americas',\n  'Country': 'Chile',\n  'LifeExpectancy': 78.553,\n  'GDP': 13171.63885,\n  'Population': 16284741\n}, {\n  'continent': 'Americas',\n  'Country': 'Colombia',\n  'LifeExpectancy': 72.889,\n  'GDP': 7006.580419,\n  'Population': 44227550\n}, {\n  'continent': 'Americas',\n  'Country': 'Costa Rica',\n  'LifeExpectancy': 78.782,\n  'GDP': 9645.06142,\n  'Population': 4133884\n}, {\n  'continent': 'Americas',\n  'Country': 'Cuba',\n  'LifeExpectancy': 78.273,\n  'GDP': 8948.102923,\n  'Population': 11416987\n}, {\n  'continent': 'Americas',\n  'Country': 'Dominican Republic',\n  'LifeExpectancy': 72.235,\n  'GDP': 6025.374752,\n  'Population': 9319622\n}, {\n  'continent': 'Americas',\n  'Country': 'Ecuador',\n  'LifeExpectancy': 74.994,\n  'GDP': 6873.262326,\n  'Population': 13755680\n}, {\n  'continent': 'Americas',\n  'Country': 'El Salvador',\n  'LifeExpectancy': 71.878,\n  'GDP': 5728.353514,\n  'Population': 6939688\n}, {\n  'continent': 'Americas',\n  'Country': 'Guatemala',\n  'LifeExpectancy': 70.259,\n  'GDP': 5186.050003,\n  'Population': 12572928\n}, {\n  'continent': 'Americas',\n  'Country': 'Honduras',\n  'LifeExpectancy': 70.198,\n  'GDP': 3548.330846,\n  'Population': 7483763\n}, {\n  'continent': 'Americas',\n  'Country': 'Jamaica',\n  'LifeExpectancy': 72.567,\n  'GDP': 7320.880262,\n  'Population': 2780132\n}, {\n  'continent': 'Americas',\n  'Country': 'Mexico',\n  'LifeExpectancy': 76.195,\n  'GDP': 11977.57496,\n  'Population': 108700891\n}, {\n  'continent': 'Americas',\n  'Country': 'Nicaragua',\n  'LifeExpectancy': 72.899,\n  'GDP': 2749.320965,\n  'Population': 5675356\n}, {\n  'continent': 'Americas',\n  'Country': 'Panama',\n  'LifeExpectancy': 75.537,\n  'GDP': 9809.185636,\n  'Population': 3242173\n}, {\n  'continent': 'Americas',\n  'Country': 'Paraguay',\n  'LifeExpectancy': 71.752,\n  'GDP': 4172.838464,\n  'Population': 6667147\n}, {\n  'continent': 'Americas',\n  'Country': 'Peru',\n  'LifeExpectancy': 71.421,\n  'GDP': 7408.905561,\n  'Population': 28674757\n}, {\n  'continent': 'Americas',\n  'Country': 'Puerto Rico',\n  'LifeExpectancy': 78.746,\n  'GDP': 19328.70901,\n  'Population': 3942491\n}, {\n  'continent': 'Americas',\n  'Country': 'Trinidad and Tobago',\n  'LifeExpectancy': 69.819,\n  'GDP': 18008.50924,\n  'Population': 1056608\n}, {\n  'continent': 'Americas',\n  'Country': 'United States',\n  'LifeExpectancy': 78.242,\n  'GDP': 42951.65309,\n  'Population': 301139947\n}, {\n  'continent': 'Americas',\n  'Country': 'Uruguay',\n  'LifeExpectancy': 76.384,\n  'GDP': 10611.46299,\n  'Population': 3447496\n}, {\n  'continent': 'Americas',\n  'Country': 'Venezuela',\n  'LifeExpectancy': 73.747,\n  'GDP': 11415.80569,\n  'Population': 26084662\n}, {\n  'continent': 'Asia',\n  'Country': 'China',\n  'LifeExpectancy': 72.961,\n  'GDP': 4959.114854,\n  'Population': 1318683096\n}, {\n  'continent': 'Asia',\n  'Country': 'Hong Kong, China',\n  'LifeExpectancy': 82.208,\n  'GDP': 39724.97867,\n  'Population': 6980412\n}, {\n  'continent': 'Asia',\n  'Country': 'Japan',\n  'LifeExpectancy': 82.603,\n  'GDP': 31656.06806,\n  'Population': 127467972\n}, {\n  'continent': 'Asia',\n  'Country': 'Korea, Dem. Rep.',\n  'LifeExpectancy': 67.297,\n  'GDP': 1593.06548,\n  'Population': 23301725\n}, {\n  'continent': 'Asia',\n  'Country': 'Korea, Rep.',\n  'LifeExpectancy': 78.623,\n  'GDP': 23348.13973,\n  'Population': 49044790\n}, {\n  'continent': 'Europe',\n  'Country': 'Albania',\n  'LifeExpectancy': 76.423,\n  'GDP': 5937.029526,\n  'Population': 3600523\n}, {\n  'continent': 'Europe',\n  'Country': 'Austria',\n  'LifeExpectancy': 79.829,\n  'GDP': 36126.4927,\n  'Population': 8199783\n}, {\n  'continent': 'Europe',\n  'Country': 'Belgium',\n  'LifeExpectancy': 79.441,\n  'GDP': 33692.60508,\n  'Population': 10392226\n}, {\n  'continent': 'Europe',\n  'Country': 'Bosnia and Herzegovina',\n  'LifeExpectancy': 74.852,\n  'GDP': 7446.298803,\n  'Population': 4552198\n}, {\n  'continent': 'Europe',\n  'Country': 'Bulgaria',\n  'LifeExpectancy': 73.005,\n  'GDP': 10680.79282,\n  'Population': 7322858\n}, {\n  'continent': 'Europe',\n  'Country': 'Croatia',\n  'LifeExpectancy': 75.748,\n  'GDP': 14619.22272,\n  'Population': 4493312\n}, {\n  'continent': 'Europe',\n  'Country': 'Czech Republic',\n  'LifeExpectancy': 76.486,\n  'GDP': 22833.30851,\n  'Population': 10228744\n}, {\n  'continent': 'Europe',\n  'Country': 'Denmark',\n  'LifeExpectancy': 78.332,\n  'GDP': 35278.41874,\n  'Population': 5468120\n}, {\n  'continent': 'Europe',\n  'Country': 'Finland',\n  'LifeExpectancy': 79.313,\n  'GDP': 33207.0844,\n  'Population': 5238460\n}, {\n  'continent': 'Europe',\n  'Country': 'France',\n  'LifeExpectancy': 80.657,\n  'GDP': 30470.0167,\n  'Population': 61083916\n}, {\n  'continent': 'Europe',\n  'Country': 'Germany',\n  'LifeExpectancy': 79.406,\n  'GDP': 32170.37442,\n  'Population': 82400996\n}, {\n  'continent': 'Europe',\n  'Country': 'Greece',\n  'LifeExpectancy': 79.483,\n  'GDP': 27538.41188,\n  'Population': 10706290\n}, {\n  'continent': 'Europe',\n  'Country': 'Hungary',\n  'LifeExpectancy': 73.338,\n  'GDP': 18008.94444,\n  'Population': 9956108\n}, {\n  'continent': 'Europe',\n  'Country': 'Iceland',\n  'LifeExpectancy': 81.757,\n  'GDP': 36180.78919,\n  'Population': 301931\n}, {\n  'continent': 'Europe',\n  'Country': 'Ireland',\n  'LifeExpectancy': 78.885,\n  'GDP': 40675.99635,\n  'Population': 4109086\n}, {\n  'continent': 'Europe',\n  'Country': 'Italy',\n  'LifeExpectancy': 80.546,\n  'GDP': 28569.7197,\n  'Population': 58147733\n}, {\n  'continent': 'Europe',\n  'Country': 'Montenegro',\n  'LifeExpectancy': 74.543,\n  'GDP': 9253.896111,\n  'Population': 684736\n}, {\n  'continent': 'Europe',\n  'Country': 'Netherlands',\n  'LifeExpectancy': 79.762,\n  'GDP': 36797.93332,\n  'Population': 16570613\n}, {\n  'continent': 'Europe',\n  'Country': 'Norway',\n  'LifeExpectancy': 80.196,\n  'GDP': 49357.19017,\n  'Population': 4627926\n}, {\n  'continent': 'Europe',\n  'Country': 'Poland',\n  'LifeExpectancy': 75.563,\n  'GDP': 15389.92468,\n  'Population': 38518241\n}, {\n  'continent': 'Europe',\n  'Country': 'Portugal',\n  'LifeExpectancy': 78.098,\n  'GDP': 20509.64777,\n  'Population': 10642836\n}, {\n  'continent': 'Europe',\n  'Country': 'Romania',\n  'LifeExpectancy': 72.476,\n  'GDP': 10808.47561,\n  'Population': 22276056\n}, {\n  'continent': 'Europe',\n  'Country': 'Serbia',\n  'LifeExpectancy': 74.002,\n  'GDP': 9786.534714,\n  'Population': 10150265\n}, {\n  'continent': 'Europe',\n  'Country': 'Slovak Republic',\n  'LifeExpectancy': 74.663,\n  'GDP': 18678.31435,\n  'Population': 5447502\n}, {\n  'continent': 'Europe',\n  'Country': 'Slovenia',\n  'LifeExpectancy': 77.926,\n  'GDP': 25768.25759,\n  'Population': 2009245\n}, {\n  'continent': 'Europe',\n  'Country': 'Spain',\n  'LifeExpectancy': 80.941,\n  'GDP': 28821.0637,\n  'Population': 40448191\n}, {\n  'continent': 'Europe',\n  'Country': 'Sweden',\n  'LifeExpectancy': 80.884,\n  'GDP': 33859.74835,\n  'Population': 9031088\n}, {\n  'continent': 'Europe',\n  'Country': 'Switzerland',\n  'LifeExpectancy': 81.701,\n  'GDP': 37506.41907,\n  'Population': 7554661\n}, {\n  'continent': 'Europe',\n  'Country': 'Turkey',\n  'LifeExpectancy': 71.777,\n  'GDP': 8458.276384,\n  'Population': 71158647\n}, {\n  'continent': 'Europe',\n  'Country': 'United Kingdom',\n  'LifeExpectancy': 79.425,\n  'GDP': 33203.26128,\n  'Population': 60776238\n}, {\n  'continent': 'Oceania',\n  'Country': 'Australia',\n  'LifeExpectancy': 81.235,\n  'GDP': 34435.36744,\n  'Population': 20434176\n}, {\n  'continent': 'Oceania',\n  'Country': 'New Zealand',\n  'LifeExpectancy': 80.204,\n  'GDP': 25185.00911,\n  'Population': 4115771\n}]\n\nclass ChartDemo extends React.Component {\n  render () {\n    const cardContent = `此页面用到的图表插件是<a href=\"https://github.com/alibaba/BizCharts\">bizcharts@^3.1.10</a>`\n    return (\n      <div>\n        <CustomBreadcrumb arr={['其它', '图表']}/>\n        <TypingCard title='图表' source={cardContent}/>\n        <Row gutter={10}>\n          <Col span={12}>\n            <Card title='基础折线图' bordered={false} className='card-item'>\n              <Chart height={400} data={data} scale={cols} forceFit>\n                <Axis name=\"year\"/>\n                <Axis name=\"value\"/>\n                <Tooltip crosshairs={{type: 'y'}}/>\n                <Geom type=\"line\" position=\"year*value\" size={2}/>\n                <Geom type='point' position=\"year*value\" size={4} shape={'circle'}\n                      style={{stroke: '#fff', lineWidth: 1}}/>\n              </Chart>\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card title='基础柱状图' bordered={false} className='card-item'>\n              <Chart height={400} data={data2} scale={cols2} forceFit>\n                <Axis name=\"year\"/>\n                <Axis name=\"sales\"/>\n                <Tooltip crosshairs={{type: 'y'}}/>\n                <Geom type=\"interval\" position=\"year*sales\"/>\n              </Chart>\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={10}>\n          <Col span={12}>\n            <Card title='基础饼图' bordered={false} className='card-item'>\n              <Chart height={400} data={dv3} scale={cols3} padding={[80, 100, 80, 80]} forceFit>\n                <Coord type='theta' radius={0.75}/>\n                <Axis name=\"percent\"/>\n                {/*<Legend position='right' offsetY={-80} offsetX={-100}/>*/}\n                <Legend position='right' offsetY={-80}/>\n                <Tooltip\n                  showTitle={false}\n                  itemTpl='<li><span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>{name}: {value}</li>'\n                />\n                <Geom\n                  type=\"intervalStack\"\n                  position=\"percent\"\n                  color='item'\n                  tooltip={['item*percent', (item, percent) => {\n                    percent = percent * 100 + '%'\n                    return {\n                      name: item,\n                      value: percent\n                    }\n                  }]}\n                  style={{lineWidth: 1, stroke: '#fff'}}\n                >\n                  <Label content='percent' formatter={(val, item) => {\n                    return item.point.item + ': ' + val\n                  }}/>\n                </Geom>\n              </Chart>\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card title='气泡图' bordered={false} className='card-item'>\n              <Chart height={400} data={data4} scale={cols4} forceFit>\n                <Tooltip showTitle={false}/>\n                <Axis name='GDP' label={{\n                  formatter: (value) => {\n                    return (value / 1000).toFixed(0) + 'k'\n                  } // 格式化坐标轴的显示\n                }}/>\n                <Axis name='LifeExpectancy'/>\n                <Legend reversed/>\n                <Geom type='point' position=\"GDP*LifeExpectancy\" color={['continent', val => {\n                  return colorMap[val]\n                }]} tooltip='Country*Population*GDP*LifeExpectancy' opacity={0.65} shape=\"circle\"\n                      size={['Population', [4, 65]]} style={['continent', {\n                  lineWidth: 1,\n                  strokeOpacity: 1,\n                  fillOpacity: 0.3,\n                  opacity: 0.65,\n                  stroke: val => {\n                    return colorMap[val]\n                  }\n                }]}/>\n              </Chart>\n            </Card>\n          </Col>\n        </Row>\n        <BackTop visibilityHeight={200} style={{right: 50}}/>\n      </div>\n    )\n  }\n}\n\nexport default ChartDemo"],"sourceRoot":""}