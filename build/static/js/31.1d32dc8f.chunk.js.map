{"version":3,"sources":["components/CustomBreadcrumb/index.js","utils/typing.js","components/TypingCard/index.js","routes/Feedback/SpinDemo/index.js"],"names":["CustomBreadcrumb","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","antd_es_breadcrumb__WEBPACK_IMPORTED_MODULE_1__","style","marginBottom","Item","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to","arr","map","item","key","title","Typing","opts","Object","classCallCheck","this","source","output","delay","chain","parent","dom","val","done","convert","children","Array","from","childNodes","i","length","node","nodeType","concat","nodeValue","split","push","callback","setTimeout","appendChild","document","createTextNode","ele","_this","current","shift","print","play","cloneNode","init","TypingCard","start","react_default","card","hoverable","bordered","className","minHeight","height","id","display","ref","el","dangerouslySetInnerHTML","__html","React","Component","defaultProps","SpinDemo","state","loading","loading2","NProgressStart","NProgress","setState","NProgressDone","_this2","react__WEBPACK_IMPORTED_MODULE_21___default","_components_CustomBreadcrumb_index__WEBPACK_IMPORTED_MODULE_24__","_components_TypingCard__WEBPACK_IMPORTED_MODULE_25__","antd_es_row__WEBPACK_IMPORTED_MODULE_1__","gutter","antd_es_col__WEBPACK_IMPORTED_MODULE_5__","span","antd_es_card__WEBPACK_IMPORTED_MODULE_11__","antd_es_spin__WEBPACK_IMPORTED_MODULE_15__","indicator","antd_es_icon__WEBPACK_IMPORTED_MODULE_13__","type","tip","antd_es_alert__WEBPACK_IMPORTED_MODULE_9__","message","description","antd_es_button__WEBPACK_IMPORTED_MODULE_7__","onClick","size","spinning","antd_es_switch__WEBPACK_IMPORTED_MODULE_3__","onChange","checked"],"mappings":"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","file":"static/js/31.1d32dc8f.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Breadcrumb} from 'antd'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CustomBreadcrumb = (props)=>(\r\n  <Breadcrumb style={{marginBottom:16}}>\r\n    <Breadcrumb.Item><Link to='/home'>首页</Link></Breadcrumb.Item>\r\n    {props.arr && props.arr.map(item=>{\r\n      if ((typeof item) === 'object'){\r\n        return <Breadcrumb.Item key={item.title}><Link to={item.to}>{item.title}</Link></Breadcrumb.Item>\r\n      } else {\r\n        return <Breadcrumb.Item key={item}>{item}</Breadcrumb.Item>\r\n      }\r\n    })}\r\n  </Breadcrumb>\r\n)\r\nexport default CustomBreadcrumb","class Typing {\r\n  constructor(opts) {\r\n    this.opts = opts || {};\r\n    this.source = opts.source;\r\n    this.output = opts.output;\r\n    this.delay = opts.delay || 120;\r\n    this.chain = {\r\n      parent: null,\r\n      dom: this.output,\r\n      val: []\r\n    };\r\n    if (!(typeof this.opts.done === 'function')) this.opts.done = function () {\r\n    };\r\n  }\r\n\r\n  init() {\r\n    //初始化函数\r\n    this.chain.val = this.convert(this.source, this.chain.val);\r\n  }\r\n\r\n  convert(dom, arr) {\r\n    //将dom节点的子节点转换成数组，\r\n    let children = Array.from(dom.childNodes)\r\n    for (let i = 0; i < children.length; i++) {\r\n      let node = children[i]\r\n      if (node.nodeType === 3) {\r\n        arr = arr.concat(node.nodeValue.split(''))   //将字符串转换成字符串数组，后面打印时才会一个一个的打印\r\n      } else if (node.nodeType === 1) {\r\n        let val = []\r\n        val = this.convert(node, val)\r\n        arr.push({\r\n          'dom': node,\r\n          'val': val\r\n        })\r\n      }\r\n    }\r\n    return arr\r\n  }\r\n\r\n  print(dom, val, callback) {\r\n    setTimeout(function () {\r\n      dom.appendChild(document.createTextNode(val));\r\n      callback();\r\n    }, this.delay);\r\n  }\r\n\r\n  play(ele) {\r\n    //当打印最后一个字符时，动画完毕，执行done\r\n    if (!ele.val.length) {\r\n      if (ele.parent) this.play(ele.parent);\r\n      else this.opts.done();\r\n      return;\r\n    }\r\n    let current = ele.val.shift()  //获取第一个元素，同时删除数组中的第一个元素\r\n    if (typeof current === 'string') {\r\n      this.print(ele.dom, current, () => {\r\n        this.play(ele); //继续打印下一个字符\r\n      })\r\n    } else {\r\n      let dom = current.dom.cloneNode() //克隆节点，不克隆节点的子节点，所以不用加参数true\r\n      ele.dom.appendChild(dom)\r\n      this.play({\r\n        parent: ele,\r\n        dom,\r\n        val: current.val\r\n      })\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this.init();\r\n    this.play(this.chain);\r\n  }\r\n}\r\n\r\nexport default Typing","import React from 'react'\r\nimport {Card} from 'antd'\r\nimport Typing from '../../utils/typing'\r\n\r\nclass TypingCard extends React.Component {\r\n  static defaultProps = {\r\n    title: '何时使用',\r\n    source:'',\r\n    height:136\r\n  }\r\n  componentDidMount(){\r\n    const typing = new Typing({\r\n      source:this.source,\r\n      output:this.output,\r\n      delay:30\r\n    })\r\n    typing.start()\r\n  }\r\n  render() {\r\n    return (\r\n      <Card hoverable bordered={false} className='card-item' title={this.props.title} style={{minHeight:this.props.height}} id={this.props.id}>\r\n        <div style={{display:'none'}} ref={el => this.source = el} dangerouslySetInnerHTML={{__html:this.props.source}}/>\r\n        <div ref={el => this.output = el}/>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TypingCard","import React from 'react'\nimport {Card, Col, Row, Spin, Icon, Alert, Switch, Button} from 'antd'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb/index'\nimport TypingCard from '../../../components/TypingCard'\n\nclass SpinDemo extends React.Component {\n  state = {\n    loading: false,\n    loading2: false\n  }\n  componentWillMount(){\n    //页面路由加载的进度条，React有没有方法可以使路由加载自动调用这个方法，避免在每个页面都设置\n    //vue有方法可以实现https://segmentfault.com/q/1010000006653683/a-1020000007724198\n    NProgress.start()\n  }\n  componentDidMount(){\n    NProgress.done()\n  }\n  componentWillUnmount(){\n    //这里是防止下面调用NProgress.start()方法后离开组件后还未关闭\n    NProgress.done()\n  }\n  NProgressStart = () => {\n    NProgress.start()\n    this.setState({\n      loading2: true\n    })\n  }\n  NProgressDone = () => {\n    NProgress.done()\n    this.setState({\n      loading2: false\n    })\n  }\n\n  render() {\n    const loading2 = this.state.loading2\n    return (\n      <div>\n        <CustomBreadcrumb arr={['反馈','加载中']}/>\n        <TypingCard source='页面局部处于等待异步数据或正在渲染过程时，合适的加载动效会有效缓解用户的焦虑。'/>\n        <Row gutter={16}>\n          <Col span={12}>\n            <Card bordered={false} className='card-item'>\n              <Spin/>&emsp;\n              <Spin indicator={<Icon type='loading'/>}/>\n            </Card>\n            <Card bordered={false} className='card-item'>\n              <Spin tip=\"Loading...\">\n                <Alert\n                  message=\"Alert message title\"\n                  description=\"Further details about the context of this alert.\"\n                  type=\"info\"\n                />\n              </Spin>\n            </Card>\n            <Card bordered={false} className='card-item'>\n              <Button onClick={this.NProgressStart} loading={loading2}>页面顶部进度条加载</Button>&emsp;\n              <Button onClick={this.NProgressDone}>顶部进度条加载完成</Button>\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card bordered={false} className='card-item'>\n              <Spin size='small'/>&emsp;\n              <Spin/>&emsp;\n              <Spin size='large'/>\n            </Card>\n            <Card bordered={false} className='card-item'>\n              <div style={{marginBottom: '1em'}}>\n                <Spin tip=\"Loading...\" spinning={this.state.loading}>\n                  <Alert\n                    message=\"Alert message title\"\n                    description=\"Further details about the context of this alert.\"\n                    type=\"info\"\n                  />\n                </Spin>\n              </div>\n              Loading state：<Switch onChange={(checked) => this.setState({loading: checked})}/>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default SpinDemo"],"sourceRoot":""}