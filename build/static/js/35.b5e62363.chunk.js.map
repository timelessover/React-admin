{"version":3,"sources":["components/CustomBreadcrumb/index.js","utils/typing.js","components/TypingCard/index.js","routes/Navigation/StepsDemo/index.js"],"names":["CustomBreadcrumb","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","antd_es_breadcrumb__WEBPACK_IMPORTED_MODULE_1__","style","marginBottom","Item","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to","arr","map","item","key","title","Typing","opts","Object","classCallCheck","this","source","output","delay","chain","parent","dom","val","done","convert","children","Array","from","childNodes","i","length","node","nodeType","concat","nodeValue","split","push","callback","setTimeout","appendChild","document","createTextNode","ele","_this","current","shift","print","play","cloneNode","init","TypingCard","start","react_default","card","hoverable","bordered","className","minHeight","height","id","display","ref","el","dangerouslySetInnerHTML","__html","React","Component","defaultProps","Step","antd_es_steps__WEBPACK_IMPORTED_MODULE_22__","steps","content","StepsDemo","state","size","setState","_this2","_this$state","react__WEBPACK_IMPORTED_MODULE_23___default","_components_CustomBreadcrumb_index__WEBPACK_IMPORTED_MODULE_24__","_components_TypingCard__WEBPACK_IMPORTED_MODULE_25__","antd_es_row__WEBPACK_IMPORTED_MODULE_3__","gutter","antd_es_col__WEBPACK_IMPORTED_MODULE_9__","span","antd_es_card__WEBPACK_IMPORTED_MODULE_15__","description","status","styles","stepsContent","antd_es_button__WEBPACK_IMPORTED_MODULE_13__","type","onClick","antd_es_message__WEBPACK_IMPORTED_MODULE_11__","success","marginLeft","prev","antd_es_radio__WEBPACK_IMPORTED_MODULE_7__","Group","onChange","e","target","value","Button","icon","antd_es_icon__WEBPACK_IMPORTED_MODULE_5__","progressDot","antd_es_back_top__WEBPACK_IMPORTED_MODULE_1__","visibilityHeight","right","margin","paddingTop","border","borderRadius","backgroundColor","textAlign"],"mappings":"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","file":"static/js/35.b5e62363.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Breadcrumb} from 'antd'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CustomBreadcrumb = (props)=>(\r\n  <Breadcrumb style={{marginBottom:16}}>\r\n    <Breadcrumb.Item><Link to='/home'>首页</Link></Breadcrumb.Item>\r\n    {props.arr && props.arr.map(item=>{\r\n      if ((typeof item) === 'object'){\r\n        return <Breadcrumb.Item key={item.title}><Link to={item.to}>{item.title}</Link></Breadcrumb.Item>\r\n      } else {\r\n        return <Breadcrumb.Item key={item}>{item}</Breadcrumb.Item>\r\n      }\r\n    })}\r\n  </Breadcrumb>\r\n)\r\nexport default CustomBreadcrumb","class Typing {\r\n  constructor(opts) {\r\n    this.opts = opts || {};\r\n    this.source = opts.source;\r\n    this.output = opts.output;\r\n    this.delay = opts.delay || 120;\r\n    this.chain = {\r\n      parent: null,\r\n      dom: this.output,\r\n      val: []\r\n    };\r\n    if (!(typeof this.opts.done === 'function')) this.opts.done = function () {\r\n    };\r\n  }\r\n\r\n  init() {\r\n    //初始化函数\r\n    this.chain.val = this.convert(this.source, this.chain.val);\r\n  }\r\n\r\n  convert(dom, arr) {\r\n    //将dom节点的子节点转换成数组，\r\n    let children = Array.from(dom.childNodes)\r\n    for (let i = 0; i < children.length; i++) {\r\n      let node = children[i]\r\n      if (node.nodeType === 3) {\r\n        arr = arr.concat(node.nodeValue.split(''))   //将字符串转换成字符串数组，后面打印时才会一个一个的打印\r\n      } else if (node.nodeType === 1) {\r\n        let val = []\r\n        val = this.convert(node, val)\r\n        arr.push({\r\n          'dom': node,\r\n          'val': val\r\n        })\r\n      }\r\n    }\r\n    return arr\r\n  }\r\n\r\n  print(dom, val, callback) {\r\n    setTimeout(function () {\r\n      dom.appendChild(document.createTextNode(val));\r\n      callback();\r\n    }, this.delay);\r\n  }\r\n\r\n  play(ele) {\r\n    //当打印最后一个字符时，动画完毕，执行done\r\n    if (!ele.val.length) {\r\n      if (ele.parent) this.play(ele.parent);\r\n      else this.opts.done();\r\n      return;\r\n    }\r\n    let current = ele.val.shift()  //获取第一个元素，同时删除数组中的第一个元素\r\n    if (typeof current === 'string') {\r\n      this.print(ele.dom, current, () => {\r\n        this.play(ele); //继续打印下一个字符\r\n      })\r\n    } else {\r\n      let dom = current.dom.cloneNode() //克隆节点，不克隆节点的子节点，所以不用加参数true\r\n      ele.dom.appendChild(dom)\r\n      this.play({\r\n        parent: ele,\r\n        dom,\r\n        val: current.val\r\n      })\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this.init();\r\n    this.play(this.chain);\r\n  }\r\n}\r\n\r\nexport default Typing","import React from 'react'\r\nimport {Card} from 'antd'\r\nimport Typing from '../../utils/typing'\r\n\r\nclass TypingCard extends React.Component {\r\n  static defaultProps = {\r\n    title: '何时使用',\r\n    source:'',\r\n    height:136\r\n  }\r\n  componentDidMount(){\r\n    const typing = new Typing({\r\n      source:this.source,\r\n      output:this.output,\r\n      delay:30\r\n    })\r\n    typing.start()\r\n  }\r\n  render() {\r\n    return (\r\n      <Card hoverable bordered={false} className='card-item' title={this.props.title} style={{minHeight:this.props.height}} id={this.props.id}>\r\n        <div style={{display:'none'}} ref={el => this.source = el} dangerouslySetInnerHTML={{__html:this.props.source}}/>\r\n        <div ref={el => this.output = el}/>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TypingCard","import React from 'react'\nimport {Card, Col, Row, Radio, Icon, Button, Steps, message,BackTop} from 'antd'\nimport CustomBreadcrumb from \"../../../components/CustomBreadcrumb/index\";\nimport TypingCard from '../../../components/TypingCard'\n\nconst Step = Steps.Step\n\nconst steps = [\n  {\n    title: 'First',\n    content: 'First-content',\n  },\n  {\n    title: 'Second',\n    content: 'Second-content',\n  },\n  {\n    title: 'Last',\n    content: 'Last-content',\n  }];\n\nclass StepsDemo extends React.Component {\n  state = {\n    size: 'default',\n    current: 0\n  }\n\n  prev() {\n    const current = this.state.current - 1;\n    if (current === -1) {\n      return\n    }\n    this.setState({current});\n  }\n\n  render() {\n    const {size, current} = this.state\n    const cardContent = '当任务复杂或者存在先后关系时，将其分解成一系列步骤，从而简化任务，引导用户按照流程完成任务的导航条'\n    return (\n      <div>\n        <CustomBreadcrumb arr={['导航', '步骤条']}/>\n        <TypingCard source={cardContent}/>\n        <Row gutter={16}>\n          <Col span={12}>\n            <Card bordered={false} className='card-item' title='基本使用'>\n              <Steps current={2}>\n                <Step title=\"Finished\" description=\"This is a description.\"/>\n                <Step title=\"In Progress\" description=\"This is a description.\"/>\n                <Step title=\"Waiting\" description=\"This is a description.\"/>\n              </Steps>\n            </Card>\n            <Card bordered={false} className='card-item' title='基本使用'>\n              <Steps current={1}>\n                <Step title=\"Finished\" description=\"This is a description.\"/>\n                <Step title=\"In Progress\" description=\"This is a description.\"/>\n                <Step title=\"Waiting\" description=\"This is a description.\"/>\n              </Steps>\n            </Card>\n            <Card bordered={false} className='card-item' title='步骤运行错误'>\n              <Steps current={1} status=\"error\">\n                <Step title=\"Finished\" description=\"This is a description\"/>\n                <Step title=\"In Process\" description=\"This is a description\"/>\n                <Step title=\"Waiting\" description=\"This is a description\"/>\n              </Steps>\n            </Card>\n            <Card bordered={false} className='card-item' title='步骤切换'>\n              <Steps current={current}>\n                {steps.map(item => <Step title={item.title}\n                                         key={item.title}\n                                         description={item.content}/>)}\n              </Steps>\n              <div style={styles.stepsContent}>{steps[current].content}</div>\n              <div>\n                {\n                  current < steps.length - 1 ?\n                    <Button type='primary'\n                            onClick={() => this.setState({current: current + 1})}>下一步</Button> :\n                    <Button\n                      onClick={() => message.success('Processing complete!')}>已完成</Button>\n                }\n                <Button\n                  style={current === 0 ? {display: 'none'} : {marginLeft: 15}}\n                  onClick={() => this.prev()}>上一步</Button>\n              </div>\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card bordered={false} className='card-item' title='大小'>\n              <Radio.Group style={{marginBottom: '1em'}}\n                           onChange={(e) => this.setState({size: e.target.value})}\n                           value={size}>\n                <Radio.Button value='small'>Small</Radio.Button>\n                <Radio.Button value='default'>Default</Radio.Button>\n              </Radio.Group>\n              <Steps current={1} size={size}>\n                <Step title=\"Finished\" description=\"This is a description.\"/>\n                <Step title=\"In Progress\" description=\"This is a description.\"/>\n                <Step title=\"Waiting\" description=\"This is a description.\"/>\n              </Steps>\n            </Card>\n            <Card bordered={false} className='card-item' title='带图标'>\n              <Steps>\n                <Step status=\"finish\" title=\"Login\" icon={<Icon type=\"user\"/>}/>\n                <Step status=\"finish\" title=\"Verification\"\n                      icon={<Icon type=\"solution\"/>}/>\n                <Step status=\"process\" title=\"Pay\"\n                      icon={<Icon type=\"loading\"/>}/>\n                <Step status=\"wait\" title=\"Done\" icon={<Icon type=\"smile-o\"/>}/>\n              </Steps>\n            </Card>\n            <Card bordered={false} className='card-item' title='点状步骤条'>\n              <Steps progressDot current={2}>\n                <Step title=\"Finished\" description=\"This is a description.\"/>\n                <Step title=\"In Progress\" description=\"This is a description.\"/>\n                <Step title=\"Waiting\" description=\"This is a description.\"/>\n              </Steps>\n            </Card>\n          </Col>\n        </Row>\n        <BackTop visibilityHeight={200} style={{right: 50}}/>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  stepsContent: {\n    minHeight: '200px',\n    margin: '16px 0',\n    paddingTop: '80px',\n    border: '1px dashed #e9e9e9',\n    borderRadius: '6px',\n    backgroundColor: '#fafafa',\n    textAlign: 'center',\n  }\n\n}\n\n\nexport default StepsDemo"],"sourceRoot":""}